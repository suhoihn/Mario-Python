#ROM
from Coin import *
from Spike import *
from Spring import *
from 와리가리 import *
from seesaw import *
from BackGround import *
import Ground
from Enemy import *
from Thwomp import *
from Pipe import *
from Cannon import *
from Block import *
from Platform import *
from Things import *
from Spiny import *
from Yoshi import *
from Galumba import *
from Firebar import *
from Lakitu import *

import Globals,random
Globals.WaterTheme = False
Globals.ScrollLimit = [[None,None],[None,85]]#85
if Globals.RegisteredCPidx == -1:#CP가 안찍혔을 때
    Globals.StartPoint = (32 * 10,32 * 0)

#=======BackGround=======
for i in range(10):
    BackGround(i,theme = "Athletic")

#=======Block=======
for i in range(1,8+1):
    for j in range(1,8-i):
        Block(5000+j*32,450-32*i)

#Block(5146,250)
for i in range(1,5):
    QBlock(2500-i*32,150,Invisible=True,ContainmentType = "10Coin")
  

TextBlock(32 * 150,32 * 1,["Welecome to Super Mario World ","Python Remake!","","Press B to jump","Press L or R to spin jump","Press Y to dash"])
for i in range(10):
    Cloud(32 * (140 + i), 32 * 13)
    Cloud(32 * (140 + i), 32 * 11)
    Cloud(32 * (140 + i), 32 * 9)

    QBlock(2500+(i-2)*32,150 - 32 * 3,Invisible=False,ContainmentType = "MegamanPowerup")

QBlock(2500+0*32,150,Invisible=True,ContainmentType = "Mushroom")
QBlock(2500+1*32,150,Invisible=True,ContainmentType = "Coin")
QBlock(2500+2*32,150,Invisible=True,ContainmentType = "FireFlower")
QBlock(2500+3*32,150,Invisible=True,ContainmentType = "Star")
QBlock(2500+4*32,150,Invisible=True,ContainmentType = "Feather")

QBlock(2500+5*32,150,Invisible=True,ContainmentType = "Feather")

QBlock(2500+6*32,150,Invisible=True,ContainmentType = "Feather")
QBlock(2500+7*32,150,Invisible=True,ContainmentType = "Feather")

QBlock(2500+8*32,150,Invisible=True,ContainmentType = "Feather")
QBlock(2500+9*32,150,Invisible=True,ContainmentType = "Star")
QBlock(2500+10*32,150,Invisible=True,ContainmentType = "Star")
QBlock(2500+11*32,150,Invisible=True,ContainmentType = "Star")
QBlock(2500+12*32,150,Invisible=True,ContainmentType = "Star")
QBlock(2500+13*32,150,Invisible=True,ContainmentType = "Star")

for i in range(0,10):
    for j in range(0,1):
        BreakableBlock(2800+i*32,410 - j*32,ContainmentType = "10Coin")
    
QBlock(4550+64,34,Invisible=True)

Block(4550+64,-32 * 30)

Block(4550+64 + 32 * 5,-32 * 61)
for i in range(1,10):
    Block(4550 + 64 + i * 32,-32 * 25)
    if 4 <= i <= 6:
        QBlock(4550 + 64 + i * 32,-32 * 28,Invisible = False,ContainmentType = "1up")
        if i == 5:
            QBlock(4550 + 64 + i * 32,-32 * 31,Invisible = True)
            for j in range(1,10):
                Block(4550+64 + 32 * 5 + j * 32,-32 * 56)
                
for i in range(1,20):
    Block(15000 + 32 * (i - 10) ,-32 * 52)
    Block(15000 + 32 * (i - 10) ,-32 * 62)
    if i == 1 or i == 19:
        for j in range(10):
            Block(15000 + 32 * (i - 10)  ,-32 * 52 - 32 * j)
QBlock(1920,270,Invisible = True)
QBlock(1920+32,270,Invisible = True)

QBlock(9220,380,Invisible = True,ContainmentType = "Mushroom")
QBlock(9220+32,380,Invisible = True,ContainmentType = "Mushroom")
QBlock(9220+64,380,Invisible = True,ContainmentType = "Mushroom")

QBlock(9220+32,250,Invisible = True,ContainmentType = "Mushroom")
QBlock(9220+64,250,Invisible = True,ContainmentType = "Mushroom")
QBlock(9220+96,250,Invisible = True,ContainmentType = "Mushroom")

Block(4550-32,-30)
Block(4550-32,2)

Block(11536,-250-32)
Block(11536+32,-250-32)

Block(6400,300)

QBlock(1500,300)

QBlock(12100,420,Invisible = False,ContainmentType = "Star")
Block(12300,280)#,Invisible = False,ContainmentType = "Star")


def rectblock(x,y):
    Block(x,y)
    Block(x+32,y)
    Block(x+32,y+32)
    Block(x,y+32)

rectblock(13552 + 128,145 - 64 - 64)
rectblock(13552 + 256,145 - 64 - 128)

rectblock(13552 + 256 + 128,145 + 128)
rectblock(13552 + 256 + 128,145 - 128)

rectblock(13552 + 256,145 + 128 + 64)
rectblock(13552 + 128,145 + 64 + 64)
rectblock(13552 + 256,145)
for i in range(13):
    Block(13552 + 256 + 192 + i*32,145 + 128)
    if i == 5:
        QBlock(13552 + 256 + 192 + i*32,145 - 64,ContainmentType = "Feather")

for i in range(3):
    Block(13552 + 256 + 192 + 15 * 32 + i * 32,145 + 128 - 32)
    Block(13552 + 256 + 192 + 20 * 32 + i * 32,145 + 128 - 32 * 4)
for i in range(30):
    Block(13552 + 256 + 192 + 35 * 32 + i * 32,145 + 128 - 32 * 7)
    if 8 < i <10:
        QBlock(13552 + 256 + 192 + 35 * 32 + i * 32,145 + 128 - 32 * 20,Invisible = True,ContainmentType = "Star")
    if i == 8:
        for j in range(10):
            Block(13552 + 256 + 192 + 35 * 32 + i * 32,145 + 128 - 32 * 7 - 32 * j)
    if i == 24:
        for j in range(15):
            Block(13552 + 256 + 192 + 35 * 32 + i * 32,145 + 128 - 32 * 7 - 32 * j)
    
for i in range(8):
    BreakableBlock(9219+32*i,575+32+10)
    QBlock(9219+i*32,480+32,Invisible = True,ContainmentType = "Mushroom")

for i in range(0,25):
    Block(7830,480 + 200 - 32*i)
##    Block(6000,148 - 32*i)
##    Block(6100,48 - 32*i)

for i in range(1,9):
    Block(7830 + i*32,64)

QBlock(17900,400,Invisible=False,ContainmentType = "1up")

QBlock(17900 + 64,400,Invisible=False,ContainmentType = "1up")
QBlock(17900 + 128,400,Invisible=False,ContainmentType = "1up")

OnOffSwitch(170 *32 ,13*32)
OnOffSwitch(178.5 *32 ,6.5*32)


OnOffBlock(174 *32 ,13*32,"ON")
OnOffBlock(175 *32 ,13*32,"ON")
OnOffBlock(176 *32 ,13*32,"ON")

OnOffBlock(181 *32 ,10*32,"OFF")
OnOffBlock(182 *32 ,10*32,"OFF")
OnOffBlock(183 *32 ,10*32,"OFF")

OnOffBlock(184*32 ,15*32,"OFF")

OnOffBlock(194*32 ,13*32,"ON")
OnOffBlock(195*32 ,13*32,"ON")
BreakableBlock(194*32,14*32)
BreakableBlock(195*32,14*32)

OnOffSwitch(583 * 32,9 * 32)
#OnOffBlock(583 * 32,10 * 32,"ON")
OnOffSwitch(608 * 32,5 * 32)

for i in range(1,22):
    OnOffBlock((583 + i)*32 ,12*32,"ON")
for i in range(4):
    OnOffBlock((610 + i)*32 ,8*32,"OFF")
OnOffSwitch(615 * 32,4 * 32)
for i in range(4):
    OnOffBlock((618 + i)*32 ,8*32,"ON")

for i in range(6):
    OnOffBlock((632 + i)*32 ,2*32,"ON")

#=======Cannon=======
cannon(1600,224 + 32,4)
cannon(1600 + 32 * 1,224,5)
cannon(1600 + 32 * 2,224 - 32,6)
cannon(1600 + 32 * 3,224,5)
cannon(1600 + 32 * 4,224 + 32,4)
##for i in range(25):
##    Cannon(7830 - 36*i,610 - 32*25+28*i,25-i)

cannon(18480 + 32 * 5,32 * 15,1)
cannon(18480 + 32 * 5,32 * 14,1)
cannon(18480 + 32 * 5,32 * 13,1)
cannon(18480 + 32 * 5,32 * 12,1)

#=======Coin=======
coin(1100,365)
coin(1130,365)
coin(1160,365)
coin(203*32,13*32)
coin(204*32,13*32)
for i in range(3):
    coin(4550+64 + 32 * 5 + 5 * 32 + 32 * i,-32 * 60)
##for i in range(0,20):
##    Coin(1500+i*50,300)
##for i in range(1,10+1):
##    for j in range(1,i):
##        Coin(7500+(10-j)*32,250-32*(10-i))
##for i in range(10):
##    for j in range(100):
##        coin(2000 + 32 * j,500 - 32 * i)
#=======Enemy(Koopa)=======
for i in range(8): 
    KoopaTroopa(1500,32 * i,Type = "BuzzyBeetle")

n = 0
KoopaTroopa(32 * 228,32 * 8)
for i in range(n):
    if i <= int(n / 2):
        KoopaTroopa(5150+i*50,32 * 15,Type = "Spiny")
    else:
        KoopaTroopa(5150,32 * 12)
for i in range(1):
    KoopaTroopa(5150+  32 * i,32 * 15)
    
KoopaTroopa(14000 + 32 * 11,202)
KoopaTroopa(14000 + 32 * 16,202 - 32)
KoopaTroopa(14000 + 32 * 21,202 - 32 * 4)
KoopaTroopa(14000 + 32 * 40,202 - 32 * 30)
KoopaTroopa(14000 + 32 * 45,202 - 32 * 30)

#=======Ground=======
Map


        000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000001WWWWWW1000000000000000000000000000000000000000000000000000011110000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000






        00000000000W0W00WWW0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000(111111)0000000000000000000000000000000000000000000000000000000000000000-110001111100001]}000000000000{[1111)00000000000000(1WW00000000000000000{[]}00000000W00000000000000000000000000000000000000(11)00000000000000000000000000000111100000000110000000011)000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000G00000000000000000000000000000000000000000000000000000
        00000000000WWW000W00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000-111111+00000000000000000000000000000000000000000000000000000000000011)0000000111110000001]}00000000{[1111111)000000000000(11WW000000000000000{[1111]}00000000000000000000000000000000000000000000(1111)00000000000000000000000000001111000000001100000000011)00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
        00000000000W0W00WWW000000000000000000000111111111111WW111100000000000000111100000000000000000000000000000000000-1111+0000000000000000000000000000000000000000000000000000000000000111)00000011111000000111000000001111111111]}00000000{[111WW00000000000000011111111000000W0000000000000000000000000000000000000111111000000000000{[]}00000000000011111100000011000000000011)00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000(1111)00000000000000000000000000000000000000000000000000
        0000000000000000000000000000000000000000111111111111WW1111000000000000001111000000000000000000000000000000000000-11+0000000000000000000000000000000000000000000000000000000000000011111111001111100001111100000000111111111111]}0000{[11111WW00000000000000011111111000000000000000000000000000000000000000000001111110000000000000000000000000000111111000000110000000000011)000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000(111111)0000000000000000000000000000000000000000000000000
        00000000000011WW110000001111111111000000111111111111WW11110000000000000011110000000000000000000000000000000000000-+0000000000000000000000000000000000000{[11]}0000000000000000000011111111WW11111WW11111110000000011111111111111)00(11WWWWWWW000000000000(111111111111)000000000000000000000000000000000000000{[111111]}000000000000000000000000000000000000001100000000000011)0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000(11111111)000000000000000000000000000000000000000000011111
        00000000000011WW110000001111111111000000111111111111WW111100000000000000111100000000000000000000000000000000000000000000000000000000000000000000000000{[111111]}00000000000000000011111111WWWWWWWWW111111100000000111111111111111)(111WWWWWWW00000000000(11111111111111)000000000000000000000000000000000000{[1111111111]}00000000000000000000000000000000000011000000000000011)00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000(1111111111)00000000000000000000000000000000000000000000011


Ground.initialize(Map)
#=======Pipe======
pipe(32 * 60, 32 * 18, 69, "DOWN")
pipe(14744,-1950,69,"UP") 

pipe(1100,385,1,"DOWN")
pipe(4900,0,1,"UP")

pipe(1164,385,7,"DOWN")
pipe(11536,-250,7,"UP")

pipe(4900,-64,3,"DOWN")
pipe(4900,192,3,"UP")

pipe(2497,450,2,"RIGHT")
pipe(5889+32,448-32,2,"RIGHT")


pipe(4550,-30,4,"LEFT")


pipe(4900 - 64,400 + 32,13,"DOWN",5)
pipe(4900 + 64,400 + 64,13,"DOWN",5)

pipe(4900,400,4,"DOWN",6)

pipe(7000+32,-700-45,5,"RIGHT")
pipe(7832+31,0,5,"LEFT")

pipe(13552,145,6,"RIGHT")
pipe(13552 + 64,145,6,"LEFT")


pipe(13552 + 128,145 - 64,9,"UP")
pipe(13552 + 128,145 + 64,8,"DOWN")

pipe(13552 + 192,145,8,"RIGHT")
pipe(13552 + 256 + 64,145,11,"LEFT")

pipe(13552 + 256,145 - 64,10,"DOWN")
pipe(13552 + 256,145 + 64,10,"UP")

pipe(13552 + 192,145 - 64 - 64,12,"LEFT")
pipe(13552 + 320,145 - 128,11,"RIGHT")

pipe(13552 + 192,145 + 64 + 64,9,"LEFT")
pipe(13552 + 320,145 + 64 + 64,12,"RIGHT")

pipe(4550+64 + 32 * 5 + 5 * 32 + 32 * 3,-32 * 60 - 64,14,"RIGHT",100)

pipe(15000 - 32 * 8 ,-32 * 54,14,"DOWN")

pipe(32 * 624 + 16 ,32 * 10,15,"DOWN",4)
pipe(4550 + 32 * 50 + 32 * 5 + 5 * 32 + 32 * 3,-32 * 60 - 64 - 32 * 10,15,"UP",5)

pipe(4550 + 32 * 50 + 32 * 5 + 5 * 32 + 32 * 150,-32 * 70 - 64,16,"DOWN",10)
pipe(32 * 361,32 * 14,16,"DOWN")

pipe(32*238,32 * 14,17,"LEFT")
pipe(32*238,32 * -28,17,"UP",15)

pipe(32*205,32 * 11,18,"RIGHT")
pipe(32*427,32 * 16,18,"DOWN")

pipe(32*636,32 * 0,19,"RIGHT")
pipe(32*580,32 * 5,19,"LEFT")

pipe(32*624,32 * 15,20,"RIGHT")
pipe(32*580,32 * 5,20,"LEFT")

Globals.CurrentPipes = pipes

#=======Platform=======
a=[]
##b=[]
##radius = 50
##angle=0
##def f(angle):
##    x=100+cos(angle*pi/180)*radius
##    y=0+sin(angle*pi/180)*radius*0.5 #타원
##    return (x,y)
##for i in range(360):
##    b.append([f(i),f(i+1)])
for i in range(0,50):
    a.append([(500+(i-1)*200,200*(i%2)),(500+i*200,200*((i+1)%2))])
    #print((500+(i-1)*100,200*(i%2)),(500+i*100,200*((i+1)%2)))
Platform(a,2)
##Platform(b,4)

Platform([[(550,100),(700,100)],[(700,100),(1100,200)],[(1100,200),(1200,200)],[(1200,200),(2500,-5500)]],18)

FallingPlatform(1000,300,4)

#=======Seesaw=======
seesaw(3320,340,500)
seesaw(15000,-32*57,100)
seesaw(4320,-340,100)

#=======Spike=======
Spike(6000,180)

for i in range(1,9):
    Spike(6000+100*i,250 - 100*i)

for i in range(40):
    Spike(12300+32*i,480)

    
for i in range(1,43):
    Spike(12300-64+32*i,210 - 110)
    
for i in range(1,40):
    Spike(12300+32+32*i,210)
    
    if i % 10 == 0:
        Spike(12300+64+32*i,210 - 32)
    if i % 10 == 5:
        Spike(12300+64+32*i,210 - 78)

for i in range(9):
    Spike(12300+32*39,480 - 32*i)
    Spike(12300-64,360 - 32*i)

    
for i in range(40):
    Spike(12300-64+32*i,360)
Spike(7000,-650)

Spike(14000 + 32 * 10,242)
Spike(14000 + 32 * 12,242)

Spike(14000 + 32 * 15,210)
Spike(14000 + 32 * 17,210)

Spike(14000 + 32 * 20,210 - 32 * 3)
Spike(14000 + 32 * 22,210 - 32 * 3)

#=======Spiny=======
for i in range(2):
    KoopaTroopa(1000+i*50,200,Type = "Spiny")
    #spiny(1000+i*50,200)

#=======Spring=======
for i in range(2):
    Spring(5800 + i*50,200)
    Spring(5600 - i*80,200,direction = 1)

Spring(14000 + 40 * 32,-200)
for i in range(3):
    Spring(15000 + 32 * i,-1700)
    Spring(15000 - 32 * i,-1700,direction = 1)

#=======Things(Pswitch)=======
##for i in range(10):
##    Spring(11500 + i*50,-200)
##Pswitch(500,-100)
##for i in range(5):         
##    Pswitch(2100+50*i,50)
##for i in range(1,9):
##    for j in range(1,5):
##        Pswitch(5500 + 50*j+20*i,-900 - 50 *i)
##for j in range(1):
##    for i in range(15):
##        Pswitch(5500 + 64 * i,-900 - 200 * j)
for i in range(1,9):
    Pswitch(6000+100*i,200 - 100*i)
for i in range(3):
    Pswitch(15000 + 96 + 32 * i,-1700)
Pswitch(7000,-750)

#=======Thowmp=======
for i in range(3):
    Thwomp(3000+i*50,300-i*20)


Thwomp(14000+32*30,-100)

Thwomp(32 * 632,32 * -8)
Thwomp(32 * 634,32 * -8)

#=======와리가리=======
swing(3500,0,250)
swing(16500,-100,350)

swing(64 * 106 + 32,365,128)

rotatingplatform(4100,200,3)
rotatingplatform(17100,-300,3)
rotatingplatform(17500,-200,2)
rotatingplatform(17900,100,4)

#=======Yoshi=======
for i in range(3):
    Yoshi(15000 - 96 + 32 * i,-1700)
Yoshi(1000,100)

#=======Galumba=======
for i in range(20):
    galumba(3000 + 64 * i,200)

#=======Firebar=======
n=1
for i in range(n):
    firebar(32 * 72,32 * 12,i*30,8)


#=======Lakitu========
for i in range(0):
    Lakitu(32 * 20, 32 * 2)

